"use strict";(self.webpackChunkreact_components_docs=self.webpackChunkreact_components_docs||[]).push([[592],{42509:function(e,n,a){a.r(n),a.d(n,{default:function(){return v}});var t=a(2634),r=a(91448),l=a(30808),s=a(508),i=a.n(s),m=a(27378),o=["children","className","header","role","wrapperProps"],c=m.memo(m.forwardRef((function(e,n){var a=e.children,t=e.className,r=e.header,s=e.role,c=e.wrapperProps,p=(0,l.Z)(e,o);return m.createElement("figure",Object.assign({},c,{className:i()("rc","table-list","bg-white",null==c?void 0:c.className)}),m.createElement("figcaption",null,r),m.createElement("dl",Object.assign({},p,{ref:n,className:t,role:s||"list"}),a))}))),p=["inline","name","role","values"],d=m.memo(m.forwardRef((function(e,n){var a=e.inline,t=e.name,r=e.role,s=e.values,o=(0,l.Z)(e,p);return m.createElement("div",Object.assign({ref:n},o,{className:i()("rc","table-list-item",{"table-list-item--inline":a},o.className),role:r||"group"}),m.createElement("dt",null,t),m.createElement("div",{className:"table-list-item__values"},s.map((function(e,n){return m.createElement("dd",{key:n+"-"+e},e)}))))}))),u=a(32411),f=[a(72335)],v=function(){var e=(0,r.b)([{key:"controls",items:[{key:"header",label:"Header",description:"Table list header",controlType:"Text",initialValue:"list header"}]}]),n=e.renderForm,a=e.state.controls;return m.createElement(t.Z,{mainFile:u,importedFiles:f,example:m.createElement(c,{header:a.header,wrapperProps:{className:"w-100"}},m.createElement(d,{name:"item name",values:["item value"]}),m.createElement(d,{name:"item name",values:["item value","item value 2"]}),m.createElement(d,{name:"item name",values:["item value","item value 2","item value 3"],inline:!0})),code:'<TableList header="list header">\n    <TableListItem name="item name" values={["item value"]} />\n    <TableListItem name="item name" values={["item value", "item value 2"]} />\n    <TableListItem name="item name" values={["item value", "item value 2", "item value 3"]} inline />\n</TableList>',controls:n()})}},32411:function(e,n,a){a.r(n),n.default='import classnames from "classnames";\nimport React from "react";\nimport "./table-list.scss";\n\nexport type TableListProps = JSX.IntrinsicElements["dl"] & {\n    /** Heading for list */\n    header: string;\n    /** Props for the list\'s wrapper (figure) */\n    wrapperProps?: JSX.IntrinsicElements["figure"];\n};\n\nexport const TableList: React.FC<TableListProps> = React.memo(\n    React.forwardRef(({ children, className, header, role, wrapperProps, ...props }: TableListProps, ref: React.ForwardedRef<HTMLDListElement>) => {\n        return (\n            <figure {...wrapperProps} className={classnames("rc", "table-list", "bg-white", wrapperProps?.className)}>\n                <figcaption>{header}</figcaption>\n                <dl {...props} ref={ref} className={className} role={role || "list"}>\n                    {children}\n                </dl>\n            </figure>\n        );\n    })\n);\n'},72335:function(e,n,a){a.r(n),n.default='import classnames from "classnames";\nimport React from "react";\n\nexport type TableListItemProps = JSX.IntrinsicElements["div"] & {\n    /** Display the values inline */\n    inline?: boolean;\n    /** Name of the item */\n    name: string;\n    /** Values of the item */\n    values: string[];\n};\n\nexport const TableListItem: React.FC<TableListItemProps> = React.memo(\n    React.forwardRef(({ inline, name, role, values, ...props }: TableListItemProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n        return (\n            <div\n                ref={ref}\n                {...props}\n                className={classnames(\n                    "rc",\n                    "table-list-item",\n                    {\n                        "table-list-item--inline": inline,\n                    },\n                    props.className\n                )}\n                role={role || "group"}\n            >\n                <dt>{name}</dt>\n                <div className="table-list-item__values">\n                    {values.map((description: string, index: number) => (\n                        <dd key={`${index}-${description}`}>{description}</dd>\n                    ))}\n                </div>\n            </div>\n        );\n    })\n);\n'}}]);
//# sourceMappingURL=component---src-pages-docs-tablelist-tsx-b86861e6411456e8e208.js.map