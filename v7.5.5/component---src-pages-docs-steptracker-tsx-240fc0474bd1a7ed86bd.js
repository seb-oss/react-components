"use strict";(self.webpackChunkreact_components_docs=self.webpackChunkreact_components_docs||[]).push([[2740],{91211:function(e,t,l){l.r(t),l.d(t,{default:function(){return d}});var a=l(27378),n=l(2634),r=l(91448),o=l(30808),i=l(508),s=l.n(i),c=["label","isActive","isCompleted","isNumbered","count","className"],p=a.createElement("svg",{fill:"currentColor",name:"check",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 448 512"},a.createElement("path",{d:"M413.505 91.951L133.49 371.966l-98.995-98.995c-4.686-4.686-12.284-4.686-16.971 0L6.211 284.284c-4.686 4.686-4.686 12.284 0 16.971l118.794 118.794c4.686 4.686 12.284 4.686 16.971 0l299.813-299.813c4.686-4.686 4.686-12.284 0-16.971l-11.314-11.314c-4.686-4.686-12.284-4.686-16.97 0z"})),m=a.forwardRef((function(e,t){var l=e.label,n=e.isActive,r=e.isCompleted,i=e.isNumbered,m=e.count,b=e.className,u=(0,o.Z)(e,c);return a.createElement("li",Object.assign({},u,{ref:t,className:s()(b,"step-label",{"step-label--active":n,"step-label--completed":r})}),a.createElement("div",{"aria-hidden":"true",role:"none",className:s()("step-label__label",{"step-label__label--numbered":i})},i?m:r?p:null),a.createElement("div",{className:"step-label__name"},l))})),b=["labelPosition","list","onClick","orientation","step","useNumbers"],u=a.memo(a.forwardRef((function(e,t){var l=e.labelPosition,n=void 0===l?"bottom":l,r=e.list,i=e.onClick,c=e.orientation,p=void 0===c?"horizontal":c,u=e.step,d=e.useNumbers,k=(0,o.Z)(e,b),f=a.useState("vertical"===p),v=f[0],h=f[1],C=function(e){return{isActive:u===e,isCompleted:e<u,isNumbered:d,count:e+1,className:"step-label--"+N(),onClick:function(){return i&&i(e)}}},N=function(){return v?"left"===n?"left":"right":"top"===n?"top":"bottom"};return a.useEffect((function(){h("vertical"===p)}),[p]),a.createElement("div",Object.assign({},k,{ref:t,className:s()("rc step-tracker","step-tracker--"+p,k.className,{clickable:i})}),a.createElement("ol",{className:"step-wrapper"},null==r?void 0:r.map((function(e,t){return a.createElement(m,Object.assign({key:t},C(t),e))})),a.Children.map(k.children,(function(e,t){var l=C(t);return a.isValidElement(e)?a.cloneElement(e,Object.assign({},l,{className:s()(e.props.className,l.className)})):e}))))}))),d=a.memo((function(){var e=l(3153),t=[{label:"First"},{label:"Second"},{label:"Third"},{label:"Forth"}],o=[{label:"vertical",value:"vertical",key:"vertical"},{label:"horizontal",value:"horizontal",key:"horizontal"}],i=[{label:"bottom",value:"bottom",key:"bottom"},{label:"top",value:"top",key:"top"},{label:"right",value:"right",key:"right"},{label:"left",value:"left",key:"left"}],s=a.useState(0),c=s[0],p=s[1],b=(0,r.b)([{key:"controls",items:[{key:"orientation",initialValue:o[0].value,label:"Orientation",options:o,controlType:"Dropdown"},{key:"labelPosition",initialValue:i[0].value,label:"Direction",options:i,controlType:"Dropdown"},{label:"Use numbers",key:"useNumbers",initialValue:!1,controlType:"Checkbox"}]}]),d=b.renderForm,k=b.state.controls,f=k.orientation,v=k.labelPosition,h=k.useNumbers;return a.createElement(n.Z,{mainFile:e,example:a.createElement(a.Fragment,null,a.createElement("div",{className:"sr-only",id:"step-tracker-progress",role:"progressbar","aria-label":"Step "+(c+1)+" out of "+t.length+": "+t[c].label,"aria-valuenow":c,"aria-valuemin":1,"aria-valuemax":t.length+1,"aria-live":"polite"}),a.createElement(u,{"aria-describedby":"step-tracker-progress",step:c,onClick:p,orientation:f,labelPosition:v,useNumbers:h},t.map((function(e,t){return a.createElement(m,{label:e.label,key:t})})))),code:'<StepTracker list={[{ label: "hello" }]} step={0} onClick={null} />',controls:d()})}))},3153:function(e,t,l){l.r(t),t.default='import React from "react";\nimport classnames from "classnames";\nimport { StepLabel, StepLabelProps } from "./StepLabel";\nimport "./steptracker.scss";\n\nexport type StepTrackerLabelPosition = "right" | "left" | "bottom" | "top";\nexport type StepTrackerLabelOrientation = "horizontal" | "vertical";\n\nexport type StepTrackerProps = Omit<JSX.IntrinsicElements["div"], "onClick"> & {\n    /** Position of label in step tracker */\n    labelPosition?: StepTrackerLabelPosition;\n    /** list of item in step tracker */\n    list?: Array<StepLabelProps>;\n    /** callback when step tracker item clicked */\n    onClick?: (index: number) => void;\n    /** To display step tracker vertically or horizontally */\n    orientation?: StepTrackerLabelOrientation;\n    /** Current/ active step */\n    step: number;\n    /** Use numbers for each step */\n    useNumbers?: boolean;\n};\n/** Step trackers illustrate the steps in a multi step process */\nexport const StepTracker: React.FC<StepTrackerProps> = React.memo(\n    React.forwardRef(({ labelPosition = "bottom", list, onClick, orientation = "horizontal", step, useNumbers, ...props }: StepTrackerProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n        const [isVertical, setIsVertical] = React.useState<boolean>(orientation === "vertical");\n\n        const getLabelProps = (index: number): Partial<StepLabelProps> => ({\n            isActive: step === index,\n            isCompleted: index < step,\n            isNumbered: useNumbers,\n            count: index + 1,\n            className: `step-label--${getLabelPositionClass()}`,\n            onClick: () => onClick && onClick(index),\n        });\n\n        const getLabelPositionClass = () => {\n            if (isVertical) {\n                return labelPosition === "left" ? "left" : "right";\n            }\n            return labelPosition === "top" ? "top" : "bottom";\n        };\n\n        React.useEffect(() => {\n            setIsVertical(orientation === "vertical");\n        }, [orientation]);\n\n        return (\n            <div {...props} ref={ref} className={classnames("rc step-tracker", `step-tracker--${orientation}`, props.className, { clickable: onClick })}>\n                <ol className="step-wrapper">\n                    {list?.map((item: StepLabelProps, i: number) => (\n                        <StepLabel key={i} {...getLabelProps(i)} {...item} />\n                    ))}\n                    {React.Children.map(props.children, (Child: React.ReactElement<StepLabelProps>, i: number) => {\n                        const newProps: Partial<StepLabelProps> = getLabelProps(i);\n                        return React.isValidElement<React.FC<StepLabelProps>>(Child)\n                            ? React.cloneElement<any>(Child, {\n                                  ...newProps,\n                                  className: classnames(Child.props.className, newProps.className),\n                              })\n                            : Child;\n                    })}\n                </ol>\n            </div>\n        );\n    })\n);\n'}}]);
//# sourceMappingURL=component---src-pages-docs-steptracker-tsx-240fc0474bd1a7ed86bd.js.map