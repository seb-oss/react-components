{"version":3,"file":"3fbe8df6715bd49bc1a35fe1146325570ae4f7f2-24504bdc2e9b1d06a297.js","mappings":"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","sources":["webpack://react-components-docs/../node_modules/@sebgroup/frontend-tools/randomId/index.js","webpack://react-components-docs/../node_modules/@sebgroup/frontend-tools/randomId/randomId.js","webpack://react-components-docs/../node_modules/classnames/index.js","webpack://react-components-docs/./src/components/Footer.tsx","webpack://react-components-docs/./src/components/VersionsDropdown.tsx","webpack://react-components-docs/./src/configs.ts","webpack://react-components-docs/./src/hooks/useIsMobile.ts","webpack://react-components-docs/../lib/src/CloseButton/CloseButton.tsx","webpack://react-components-docs/../node_modules/body-scroll-lock/lib/bodyScrollLock.esm.js","webpack://react-components-docs/../lib/src/Dropdown/CustomDropdownItem.tsx","webpack://react-components-docs/../lib/src/Dropdown/Dropdown.tsx","webpack://react-components-docs/../lib/src/FeedbackIndicator/FeedbackIndicator.tsx","webpack://react-components-docs/../lib/src/Textbox/Textbox.tsx","webpack://react-components-docs/../lib/src/utils/keyboardHelper.ts","webpack://react-components-docs/./static/icons/external-link.svg","webpack://react-components-docs/../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://react-components-docs/../node_modules/@babel/runtime/helpers/defineProperty.js","webpack://react-components-docs/../node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://react-components-docs/../node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://react-components-docs/../node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://react-components-docs/../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar randomId = require('./randomId.js');\n\nexports.randomId = randomId.randomId;","'use strict';\n\nrequire(\"core-js/modules/es.date.to-string.js\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n/**\r\n * Generates a random unique ID\r\n * @param {string} seed A seed to be inserted to the random ID to ensure further uniqueness\r\n * @returns {string} The generated random ID\r\n */\n\nfunction randomId(seed) {\n  return seed + String(Math.random() * 1000 + new Date().getTime());\n}\n\nexports.randomId = randomId;","require(\"core-js/modules/es.date.to-string.js\");\n\n/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React from \"react\";\nimport \"../styles/footer.scss\";\n\nexport const Footer: React.FC = React.memo(() => {\n    return (\n        <footer className=\"container\">\n            <nav className=\"navbar\">\n                <div className=\"navbar-brand\">\n                    Developed with ❤️ by <a href=\"https://seb.se\" target=\"_blank\" rel=\"noreferrer noopener nofollow\"></a>\n                </div>\n                <div className=\"navbar-text\">\n                    <a href=\"https://www.npmjs.com/package/@sebgroup/ng-components/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\" title=\"View in npm\">\n                        <img src=\"https://img.shields.io/npm/v/@sebgroup/react-components\" alt=\"npm version\" />\n                    </a>\n                </div>\n            </nav>\n        </footer>\n    );\n});\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Dropdown } from \"@sebgroup/react-components/Dropdown\";\nimport pkg from \"@pkg\";\nimport \"../styles/versions-dropdown.scss\";\n\nconst versions = require(\"../assets/jsons/versions.json\").include;\n\ninterface VersionItem {\n    name: string;\n}\ninterface FormattedVersionItem {\n    value: string;\n    label: string;\n}\n\nexport interface VersionsDropdownProps {\n    className?: string;\n}\n\nconst VersionsDropdown: React.FC<React.PropsWithChildren<VersionsDropdownProps>> = (props: VersionsDropdownProps) => {\n    const [currentVersion, setCurrentVersion] = React.useState<string>(\"\");\n    const [formattedList, setFormattedList] = React.useState<Array<FormattedVersionItem>>([]);\n\n    /** format dropdown list */\n    const formatList = () => {\n        setFormattedList(\n            versions?.length > 0\n                ? versions.map((item: VersionItem) => ({\n                      value: item.name,\n                      label: item.name.replace(/[^.]+$/, \"x\"),\n                  }))\n                : []\n        );\n    };\n\n    React.useEffect(() => {\n        const currentpath: string = window.location.href;\n        const regex: RegExp = new RegExp(\"v(\\\\d+\\\\.)(\\\\d+\\\\.)(\\\\d)(-(beta|alpha)(\\\\.\\\\d))?\", \"g\");\n        const matchedVersions: Array<string> = currentpath.match(regex);\n        setCurrentVersion(matchedVersions?.length > 0 ? matchedVersions[0] : versions[0].name);\n        formatList();\n    }, []);\n\n    return (\n        <Dropdown\n            wrapperProps={{ className: classnames(\"version-dropdown\", props.className) }}\n            value={currentVersion}\n            selectedLabel={(value: string) => formattedList.find((item: FormattedVersionItem) => item.value === value)?.label}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) => (window.location.href = `${pkg.config.base}/${e.target.value}`)}\n        >\n            {formattedList.map((item: FormattedVersionItem, index: number) => (\n                <option key={index} value={item.value}>\n                    {item.label}\n                </option>\n            ))}\n        </Dropdown>\n    );\n};\n\nexport default VersionsDropdown;\n","const pkg = require(\"../package.json\");\n\nexport const urls: NavsURLs = {\n    releases: \"https://github.com/sebgroup/react-components/releases\",\n    github: \"https://github.com/sebgroup/react-components/\",\n    contribute: \"https://github.com/sebgroup/react-components/blob/alpha/CONTRIBUTING.md\",\n    issues: \"https://github.com/sebgroup/react-components/issues\",\n    v4: \"/v4/index.html\",\n};\n\nconst imageUrl: string = `${pkg.homepage}/site-preview.png`;\nconst siteName: string = \"SEB React Components\";\n\nexport const metaConfigs: MetaConfig = {\n    keywords: \"SEB, React, react components, typescript, mobile, web, ui, ux, open source, components\",\n    siteUrl: pkg.homepage,\n    description: pkg.description,\n    title: siteName,\n    sitePreviewImageUrl: imageUrl,\n    jsonLD: {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebApplication\",\n        name: siteName,\n        description: pkg.description,\n        url: pkg.homepage,\n        image: imageUrl,\n        screenshot: imageUrl,\n        applicationCategory: \"Software Documentation\",\n        operatingSystem: \"Android, Chrome OS, iOS, iPadOS, macOS, OS X, Linux, Windows\",\n        author: {\n            \"@type\": \"Organization\",\n            name: \"SEB\",\n            description: \"SEB is a Swedish financial group for corporate customers, institutions and private individuals with headquarters in Stockholm\",\n            url: \"https://seb.se\",\n            logo: \"https://seb.se/Static/Images/SebLogo.svg\",\n        },\n    },\n};\n","import { useState, useEffect } from \"react\";\n\nexport function useIsMobile(): boolean {\n    if (typeof window !== \"undefined\") {\n        const mobileQuery: string = \"(max-width: 767px)\";\n        const mediaQueryLists: MediaQueryList = window.matchMedia(mobileQuery);\n        const [isMobile, setIsMobile] = useState<boolean>(window.matchMedia(mobileQuery).matches);\n\n        useEffect(() => {\n            const handler: VoidFunction = () => setIsMobile(mediaQueryLists?.matches);\n            mediaQueryLists?.addEventListener(\"change\", handler);\n            return () => mediaQueryLists?.removeEventListener(\"change\", handler);\n        }, []);\n\n        return isMobile;\n    }\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport \"./close-button.scss\";\n\n/**\n * TODO: This is a component that fixes the broken `.close` element provided by Bootstrap\n * This component should be replaced by the element from Bootstrap when this PR is merged:\n * https://github.com/sebgroup/bootstrap/pull/533\n */\n\nexport const CloseButton: React.FC<JSX.IntrinsicElements[\"button\"]> = React.memo(\n    React.forwardRef((props: JSX.IntrinsicElements[\"button\"], ref: React.ForwardedRef<HTMLButtonElement>) => {\n        return <button ref={ref} {...props} className={classnames(\"rc close-btn\", props.className)} />;\n    })\n);\n","function _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n} // Older browsers don't support event options, feature detect it.\n// Adopted and modified solution from Bohdan Didukh (2017)\n// https://stackoverflow.com/questions/41594997/ios-10-safari-prevent-scrolling-behind-a-fixed-overlay-and-maintain-scroll-posi\n\n\nvar hasPassiveEvents = false;\n\nif (typeof window !== 'undefined') {\n  var passiveTestOptions = {\n    get passive() {\n      hasPassiveEvents = true;\n      return undefined;\n    }\n\n  };\n  window.addEventListener('testPassive', null, passiveTestOptions);\n  window.removeEventListener('testPassive', null, passiveTestOptions);\n}\n\nvar isIosDevice = typeof window !== 'undefined' && window.navigator && window.navigator.platform && (/iP(ad|hone|od)/.test(window.navigator.platform) || window.navigator.platform === 'MacIntel' && window.navigator.maxTouchPoints > 1);\nvar locks = [];\nvar documentListenerAdded = false;\nvar initialClientY = -1;\nvar previousBodyOverflowSetting = void 0;\nvar previousBodyPosition = void 0;\nvar previousBodyPaddingRight = void 0; // returns true if `el` should be allowed to receive touchmove events.\n\nvar allowTouchMove = function allowTouchMove(el) {\n  return locks.some(function (lock) {\n    if (lock.options.allowTouchMove && lock.options.allowTouchMove(el)) {\n      return true;\n    }\n\n    return false;\n  });\n};\n\nvar preventDefault = function preventDefault(rawEvent) {\n  var e = rawEvent || window.event; // For the case whereby consumers adds a touchmove event listener to document.\n  // Recall that we do document.addEventListener('touchmove', preventDefault, { passive: false })\n  // in disableBodyScroll - so if we provide this opportunity to allowTouchMove, then\n  // the touchmove event on document will break.\n\n  if (allowTouchMove(e.target)) {\n    return true;\n  } // Do not prevent if the event has more than one touch (usually meaning this is a multi touch gesture like pinch to zoom).\n\n\n  if (e.touches.length > 1) return true;\n  if (e.preventDefault) e.preventDefault();\n  return false;\n};\n\nvar setOverflowHidden = function setOverflowHidden(options) {\n  // If previousBodyPaddingRight is already set, don't set it again.\n  if (previousBodyPaddingRight === undefined) {\n    var _reserveScrollBarGap = !!options && options.reserveScrollBarGap === true;\n\n    var scrollBarGap = window.innerWidth - document.documentElement.clientWidth;\n\n    if (_reserveScrollBarGap && scrollBarGap > 0) {\n      var computedBodyPaddingRight = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'), 10);\n      previousBodyPaddingRight = document.body.style.paddingRight;\n      document.body.style.paddingRight = computedBodyPaddingRight + scrollBarGap + 'px';\n    }\n  } // If previousBodyOverflowSetting is already set, don't set it again.\n\n\n  if (previousBodyOverflowSetting === undefined) {\n    previousBodyOverflowSetting = document.body.style.overflow;\n    document.body.style.overflow = 'hidden';\n  }\n};\n\nvar restoreOverflowSetting = function restoreOverflowSetting() {\n  if (previousBodyPaddingRight !== undefined) {\n    document.body.style.paddingRight = previousBodyPaddingRight; // Restore previousBodyPaddingRight to undefined so setOverflowHidden knows it\n    // can be set again.\n\n    previousBodyPaddingRight = undefined;\n  }\n\n  if (previousBodyOverflowSetting !== undefined) {\n    document.body.style.overflow = previousBodyOverflowSetting; // Restore previousBodyOverflowSetting to undefined\n    // so setOverflowHidden knows it can be set again.\n\n    previousBodyOverflowSetting = undefined;\n  }\n};\n\nvar setPositionFixed = function setPositionFixed() {\n  return window.requestAnimationFrame(function () {\n    // If previousBodyPosition is already set, don't set it again.\n    if (previousBodyPosition === undefined) {\n      previousBodyPosition = {\n        position: document.body.style.position,\n        top: document.body.style.top,\n        left: document.body.style.left\n      }; // Update the dom inside an animation frame \n\n      var _window = window,\n          scrollY = _window.scrollY,\n          scrollX = _window.scrollX,\n          innerHeight = _window.innerHeight;\n      document.body.style.position = 'fixed';\n      document.body.style.top = -scrollY;\n      document.body.style.left = -scrollX;\n      setTimeout(function () {\n        return window.requestAnimationFrame(function () {\n          // Attempt to check if the bottom bar appeared due to the position change\n          var bottomBarHeight = innerHeight - window.innerHeight;\n\n          if (bottomBarHeight && scrollY >= innerHeight) {\n            // Move the content further up so that the bottom bar doesn't hide it\n            document.body.style.top = -(scrollY + bottomBarHeight);\n          }\n        });\n      }, 300);\n    }\n  });\n};\n\nvar restorePositionSetting = function restorePositionSetting() {\n  if (previousBodyPosition !== undefined) {\n    // Convert the position from \"px\" to Int\n    var y = -parseInt(document.body.style.top, 10);\n    var x = -parseInt(document.body.style.left, 10); // Restore styles\n\n    document.body.style.position = previousBodyPosition.position;\n    document.body.style.top = previousBodyPosition.top;\n    document.body.style.left = previousBodyPosition.left; // Restore scroll\n\n    window.scrollTo(x, y);\n    previousBodyPosition = undefined;\n  }\n}; // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\n\n\nvar isTargetElementTotallyScrolled = function isTargetElementTotallyScrolled(targetElement) {\n  return targetElement ? targetElement.scrollHeight - targetElement.scrollTop <= targetElement.clientHeight : false;\n};\n\nvar handleScroll = function handleScroll(event, targetElement) {\n  var clientY = event.targetTouches[0].clientY - initialClientY;\n\n  if (allowTouchMove(event.target)) {\n    return false;\n  }\n\n  if (targetElement && targetElement.scrollTop === 0 && clientY > 0) {\n    // element is at the top of its scroll.\n    return preventDefault(event);\n  }\n\n  if (isTargetElementTotallyScrolled(targetElement) && clientY < 0) {\n    // element is at the bottom of its scroll.\n    return preventDefault(event);\n  }\n\n  event.stopPropagation();\n  return true;\n};\n\nexport var disableBodyScroll = function disableBodyScroll(targetElement, options) {\n  // targetElement must be provided\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.');\n    return;\n  } // disableBodyScroll must not have been called on this targetElement before\n\n\n  if (locks.some(function (lock) {\n    return lock.targetElement === targetElement;\n  })) {\n    return;\n  }\n\n  var lock = {\n    targetElement: targetElement,\n    options: options || {}\n  };\n  locks = [].concat(_toConsumableArray(locks), [lock]);\n\n  if (isIosDevice) {\n    setPositionFixed();\n  } else {\n    setOverflowHidden(options);\n  }\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        initialClientY = event.targetTouches[0].clientY;\n      }\n    };\n\n    targetElement.ontouchmove = function (event) {\n      if (event.targetTouches.length === 1) {\n        // detect single touch.\n        handleScroll(event, targetElement);\n      }\n    };\n\n    if (!documentListenerAdded) {\n      document.addEventListener('touchmove', preventDefault, hasPassiveEvents ? {\n        passive: false\n      } : undefined);\n      documentListenerAdded = true;\n    }\n  }\n};\nexport var clearAllBodyScrollLocks = function clearAllBodyScrollLocks() {\n  if (isIosDevice) {\n    // Clear all locks ontouchstart/ontouchmove handlers, and the references.\n    locks.forEach(function (lock) {\n      lock.targetElement.ontouchstart = null;\n      lock.targetElement.ontouchmove = null;\n    });\n\n    if (documentListenerAdded) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? {\n        passive: false\n      } : undefined);\n      documentListenerAdded = false;\n    } // Reset initial clientY.\n\n\n    initialClientY = -1;\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n\n  locks = [];\n};\nexport var enableBodyScroll = function enableBodyScroll(targetElement) {\n  if (!targetElement) {\n    // eslint-disable-next-line no-console\n    console.error('enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.');\n    return;\n  }\n\n  locks = locks.filter(function (lock) {\n    return lock.targetElement !== targetElement;\n  });\n\n  if (isIosDevice) {\n    targetElement.ontouchstart = null;\n    targetElement.ontouchmove = null;\n\n    if (documentListenerAdded && locks.length === 0) {\n      document.removeEventListener('touchmove', preventDefault, hasPassiveEvents ? {\n        passive: false\n      } : undefined);\n      documentListenerAdded = false;\n    }\n  }\n\n  if (isIosDevice) {\n    restorePositionSetting();\n  } else {\n    restoreOverflowSetting();\n  }\n};","import { randomId } from \"@sebgroup/frontend-tools/randomId\";\nimport classnames from \"classnames\";\nimport React from \"react\";\n\nexport type CustomDropdownItemProps = JSX.IntrinsicElements[\"input\"] & {\n    focused?: boolean;\n    multiple?: boolean;\n};\n\nexport const CustomDropdownItem: React.FC<CustomDropdownItemProps> = ({ focused, multiple, children, ...props }: CustomDropdownItemProps) => {\n    const [id] = React.useState<string>(randomId(\"ddi-\"));\n\n    return (\n        <li className={classnames(\"custom-control\", { \"custom-checkbox\": multiple, focused, selected: props.checked })} role=\"option\" aria-selected={props.checked || null}>\n            <input {...props} type={multiple ? \"checkbox\" : \"radio\"} id={id} className={classnames({ \"custom-control-input\": multiple }) || null} hidden={!multiple} />\n            <label className={classnames({ \"custom-control-label\": multiple, \"custom-radio\": !multiple })} htmlFor={id}>\n                {children}\n            </label>\n        </li>\n    );\n};\n","import { randomId } from \"@sebgroup/frontend-tools/randomId\";\nimport type { BodyScrollOptions } from \"body-scroll-lock\";\nimport { clearAllBodyScrollLocks, disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\nimport classnames from \"classnames\";\nimport React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { CloseButton } from \"../CloseButton\";\nimport { FeedbackIndicator, Indicator } from \"../FeedbackIndicator/FeedbackIndicator\";\nimport { Key } from \"../utils/keyboardHelper\";\nimport { CustomDropdownItem } from \"./CustomDropdownItem\";\nimport \"./dropdown.scss\";\n\nexport interface DropdownText {\n    selectAll?: string;\n    noResult?: string;\n    emptyList?: string;\n    search?: string;\n}\n\nconst defaultText: Required<DropdownText> = {\n    selectAll: \"Select all\",\n    emptyList: \"List is empty\",\n    noResult: \"No result\",\n    search: \"Search...\",\n};\n\nexport function getValueOfMultipleSelect(selectOptions: Array<HTMLOptionElement>): string[] {\n    return Array.from(selectOptions)\n        .filter((option) => option.selected)\n        .map((option) => option.value);\n}\n\nexport type DropdownProps = Omit<JSX.IntrinsicElements[\"select\"], \"value\"> & {\n    /** Props for the select's wrapper (div) */\n    wrapperProps?: JSX.IntrinsicElements[\"div\"];\n    /** The value of the dropdown */\n    value?: string | string[];\n    /** An event triggered when a select of type multiple is changed returning an array of the selected values */\n    onMultipleChange?: (selected: string[]) => void;\n    /** Allows searching throw the dropdown */\n    searchable?: boolean;\n    /** Allows all selection of the dropdown */\n    isAllSelectable?: boolean;\n    /** Allows clearing the dropdown with a clear button */\n    clearable?: boolean;\n    /** Allows setting custom label to be displayed for selected item */\n    selectedLabel?: string | ((value: string | string[]) => string | string[]);\n    /** Custom texts to be dispalyed in different parts of the dropdown */\n    text?: DropdownText;\n    /** Indicator for error, warning or success */\n    indicator?: Indicator;\n};\n\nconst bodyScrollOptions: BodyScrollOptions = { reserveScrollBarGap: true };\n// This solution is meant to fix Gatsby build which complains that document and window doesn't exist in server-side rendering\nconst safeDocument: Document | null = typeof document !== \"undefined\" ? document : null;\nconst safeWindow: Window | null = typeof window !== \"undefined\" ? window : null;\nconst isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(safeWindow?.navigator?.userAgent);\n\nexport const Dropdown: React.FC<DropdownProps> = React.forwardRef(\n    ({ wrapperProps = {}, text = {}, onMultipleChange, clearable, indicator, isAllSelectable = true, searchable, selectedLabel, ...props }: DropdownProps, ref) => {\n        const { multiple, onChange } = props;\n        const [dropdownId] = React.useState<string>(randomId(\"dd-\"));\n        const [toggleId] = React.useState<string>(randomId(\"ddt-\"));\n        const [selectAllId] = React.useState<string>(randomId(\"sa-\"));\n        const [show, setShow] = React.useState<boolean>(false);\n        const [allSelected, setAllSelected] = React.useState<boolean>(false);\n        const [searchKeyword, setSearchKeyword] = React.useState<string>(\"\");\n        const [menuStyle, setMenuStyle] = React.useState<React.CSSProperties>({});\n        const [label, setLabel] = React.useState<string>();\n        const [selectRef, setSelectRef] = React.useState<HTMLSelectElement>(null);\n        const [selectRefOptions, setSelectRefOptions] = React.useState<Array<HTMLOptionElement>>([]);\n        // focused index should be defaulted to the first valued option (not `select-all` option) if dropdown is not searchable\n        const [focusedIndex, setFocusedIndex] = React.useState<number>(searchable ? -1 : multiple && isAllSelectable ? 1 : 0);\n        const buttonRef = React.useRef<HTMLButtonElement>();\n        const dropdownRef = React.useRef<HTMLDivElement>();\n        const menuRef = React.useRef<HTMLUListElement>();\n        const searchRef = React.useRef<HTMLInputElement>();\n        const [prestine, setPrestine] = React.useState<boolean>(true);\n\n        const handleDropdownMenuOpen = React.useCallback(() => {\n            setShow(true);\n            disableBodyScroll(menuRef.current, bodyScrollOptions);\n        }, [menuRef]);\n\n        const handleDropdownMenuClose = React.useCallback(() => {\n            setShow(false);\n            enableBodyScroll(menuRef.current);\n        }, [menuRef]);\n\n        const changeValue = React.useCallback(\n            (value: string) => {\n                if (multiple) {\n                    const current = selectRefOptions.find((option) => option.value === value);\n                    current.selected = !current.selected;\n                } else {\n                    selectRef.value = value;\n                    handleDropdownMenuClose();\n                }\n                selectRef.dispatchEvent(new Event(\"change\", { bubbles: true }));\n                multiple && onMultipleChange && onMultipleChange(getValueOfMultipleSelect(selectRefOptions));\n            },\n            [multiple, selectRef, selectRefOptions, onMultipleChange, handleDropdownMenuClose]\n        );\n\n        const getOptionsRef = React.useCallback(() => Array.from(menuRef.current?.querySelectorAll<HTMLLIElement>(\".custom-control\") || []), []);\n\n        const handleChange = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => changeValue(e.target.value), [changeValue]);\n\n        const selectAll = React.useCallback(\n            (forceValue?: boolean | React.ChangeEvent<HTMLInputElement>) => {\n                selectRefOptions.forEach((option: HTMLOptionElement) => {\n                    if (!option.disabled) {\n                        option.selected = typeof forceValue === \"boolean\" ? forceValue : !allSelected;\n                    } else {\n                        option.selected = false;\n                    }\n                });\n                typeof forceValue === \"boolean\" && (selectRef.value = \"\");\n                selectRef.dispatchEvent(new Event(\"change\", { bubbles: true }));\n                multiple && onMultipleChange && onMultipleChange(getValueOfMultipleSelect(selectRefOptions));\n            },\n            [allSelected, multiple, selectRefOptions, selectRef, onMultipleChange]\n        );\n\n        const isAllSelected = React.useCallback((): boolean => {\n            return selectRefOptions.every((option: HTMLOptionElement) => {\n                return option.disabled ? true : option.selected;\n            });\n        }, [selectRefOptions]);\n\n        const toggleMenu = React.useCallback(\n            (event: React.MouseEvent<HTMLButtonElement>) => {\n                if (show) {\n                    handleDropdownMenuClose();\n                } else {\n                    const rect = event.currentTarget.getBoundingClientRect();\n                    const top: number = rect.top + rect.height;\n                    const left: number = rect.left;\n                    const bottom: number = window.innerHeight - rect.y + 4;\n                    const minWidth: number = rect.width;\n                    if (window.innerHeight - top < 200) {\n                        setMenuStyle({ minWidth, bottom, left, maxHeight: rect.y - 10 });\n                    } else {\n                        setMenuStyle({ minWidth, top, left, maxHeight: window.innerHeight - top - 12 });\n                    }\n                    handleDropdownMenuOpen();\n                }\n                prestine && setPrestine(false);\n            },\n            [show, prestine, handleDropdownMenuOpen, handleDropdownMenuClose]\n        );\n\n        const toggleOption = React.useCallback(\n            (e: React.KeyboardEvent) => {\n                const optionRef: HTMLLIElement = getOptionsRef()[focusedIndex];\n\n                if (optionRef) {\n                    e.preventDefault();\n                    optionRef.classList.contains(\"select-all\") ? selectAll() : changeValue(optionRef.querySelector(\"input\")?.value);\n                }\n            },\n            [focusedIndex, changeValue, getOptionsRef, selectAll]\n        );\n\n        const onDropDownChange = React.useCallback(\n            (event: React.ChangeEvent<HTMLSelectElement>) => {\n                multiple && onMultipleChange && onMultipleChange(getValueOfMultipleSelect(Array.from(event.target.options)));\n                onChange && onChange(event);\n            },\n            [multiple, onChange, onMultipleChange]\n        );\n\n        const onDropDownKeyDown = React.useCallback(\n            (e: React.KeyboardEvent) => {\n                const optionsRef: Array<HTMLLIElement> = getOptionsRef();\n\n                switch (e.key) {\n                    case Key.Escape:\n                        handleDropdownMenuClose();\n                        break;\n                    case Key.ArrowDown:\n                    case Key.ArrowUp: {\n                        e.preventDefault();\n                        const direction: number = e.key === Key.ArrowDown ? 1 : -1;\n                        setFocusedIndex((focusedIndex) => (focusedIndex + direction + optionsRef.length) % optionsRef.length);\n                        break;\n                    }\n                    case Key.Home:\n                        setFocusedIndex(0);\n                        break;\n                    case Key.End:\n                        setFocusedIndex(optionsRef.length - 1);\n                        break;\n                    case Key.Enter:\n                        toggleOption(e);\n                        !multiple && handleDropdownMenuClose();\n                        break;\n                    case Key.Space:\n                        !searchable && toggleOption(e);\n                        !multiple && handleDropdownMenuClose();\n                        break;\n                    case Key.Tab:\n                        e.preventDefault();\n                        handleDropdownMenuClose();\n                        break;\n                    default:\n                        if (!searchable) {\n                            // TODO: printable characters keyboard support @see https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n                        }\n                        break;\n                }\n            },\n            [multiple, searchable, getOptionsRef, toggleOption, handleDropdownMenuClose]\n        );\n\n        const onSearchInputKeyDown = React.useCallback(\n            (e: React.KeyboardEvent) => {\n                switch (e.key) {\n                    case Key.Escape:\n                        e.stopPropagation();\n                        setSearchKeyword(\"\");\n                        handleDropdownMenuClose();\n                        break;\n                    case Key.Space:\n                        e.stopPropagation();\n                        break;\n                }\n            },\n            [handleDropdownMenuClose]\n        );\n\n        /** TODO: Can be extracted to a component */\n        const getOptions = () => {\n            /**\n             * running index should exclude the `select-all` option as it is not part of this function scope,\n             * hence the initial value for it should be determine if the `select-all` option is visible on screen.\n             *\n             * `select-all` option is only visible when search keyword is empty or multiple flag is true\n             */\n            let runningIndex: number = searchKeyword.length > 0 || !(multiple && isAllSelectable) ? 0 : 1;\n            const list = React.Children.map(props.children, (Child) => {\n                if (!React.isValidElement(Child)) {\n                    return Child;\n                } else {\n                    const type: string = (Child.type as any)?.name || Child.type;\n                    const filteredBySearch = (element: React.ReactElement<any>): boolean => {\n                        if (searchKeyword) {\n                            if (React.isValidElement<any>(element)) {\n                                const keyword: string = searchKeyword.toLowerCase().trim();\n                                const text: string = String(element.props?.children).toLowerCase().trim();\n                                return text.indexOf(keyword) < 0;\n                            } else {\n                                return true;\n                            }\n                        }\n                        return false;\n                    };\n                    /** Radio buttons should be grouped with a name */\n                    const name: string = multiple ? null : toggleId;\n                    switch (type) {\n                        case \"option\":\n                            return filteredBySearch(Child) ? null : (\n                                <CustomDropdownItem\n                                    {...Child.props}\n                                    multiple={multiple}\n                                    name={name}\n                                    value={Child.props.value}\n                                    checked={Array.isArray(props.value) ? props.value.includes(Child.props.value) : props.value == Child.props.value}\n                                    focused={focusedIndex === runningIndex++}\n                                    onChange={handleChange}\n                                >\n                                    {Child.props.children}\n                                </CustomDropdownItem>\n                            );\n                        case \"optgroup\": {\n                            const label = <label className=\"optgroup-label\">{Child.props?.label}</label>;\n                            return [\n                                searchKeyword ? null : label,\n                                ...React.Children.toArray(Child.props.children).map((groupChild: React.ReactElement<any>) => {\n                                    return filteredBySearch(groupChild) ? null : (\n                                        <CustomDropdownItem\n                                            {...groupChild.props}\n                                            multiple={multiple}\n                                            name={name}\n                                            value={groupChild.props.value}\n                                            checked={Array.isArray(props.value) ? props.value.includes(groupChild.props.value) : props.value == groupChild.props.value}\n                                            focused={focusedIndex === runningIndex++}\n                                            onChange={handleChange}\n                                        >\n                                            {groupChild.props.children}\n                                        </CustomDropdownItem>\n                                    );\n                                }),\n                            ];\n                        }\n                        default:\n                            return searchKeyword ? null : Child;\n                    }\n                }\n            });\n            return list?.length ? list : searchKeyword ? <p>{text.noResult || defaultText.noResult}</p> : <p>{text.emptyList || defaultText.emptyList}</p>;\n        };\n\n        const measuredSelectRef = React.useCallback(\n            (node: HTMLSelectElement) => {\n                if (typeof ref === \"function\") {\n                    // to pass ref back to parents\n                    ref(node);\n                } else if (ref) {\n                    (ref as any).current = node;\n                }\n                if (node !== null) {\n                    setSelectRef(node);\n                }\n            },\n            [ref]\n        );\n\n        React.useEffect(() => {\n            !isMobile && multiple && setAllSelected(isAllSelected());\n        }, [multiple, props.value, isAllSelected]);\n\n        React.useEffect(() => {\n            !searchable && setSearchKeyword(\"\");\n        }, [searchable]);\n\n        React.useEffect(() => {\n            if (selectRef) {\n                setSelectRefOptions(Array.from(selectRef.options));\n            }\n        }, [selectRef, props.children]);\n\n        React.useEffect(() => {\n            if (!isMobile) {\n                const detectBlur = (event: MouseEvent) => {\n                    if (!dropdownRef.current.contains(event.target as any) && !menuRef.current.contains(event.target as any)) {\n                        handleDropdownMenuClose();\n                    }\n                };\n\n                const handleScroll = (event: WheelEvent): void => {\n                    if (!menuRef.current.contains(event.target as any)) {\n                        handleDropdownMenuClose();\n                    }\n                };\n\n                if (show) {\n                    (searchable ? searchRef : menuRef).current?.focus();\n                    const selectedOption = menuRef.current?.querySelector<HTMLLIElement>(\".custom-control.selected\");\n                    selectedOption && setFocusedIndex(getOptionsRef().indexOf(selectedOption));\n                    document.addEventListener(\"click\", detectBlur);\n                    window.addEventListener(\"wheel\", handleScroll);\n                } else {\n                    !prestine && buttonRef.current?.focus();\n                    document.removeEventListener(\"click\", detectBlur);\n                    window.removeEventListener(\"wheel\", handleScroll);\n                }\n\n                return () => {\n                    document.removeEventListener(\"click\", detectBlur);\n                    window.removeEventListener(\"wheel\", handleScroll);\n                };\n            }\n        }, [prestine, searchable, show, getOptionsRef, handleDropdownMenuClose]);\n\n        React.useEffect(() => {\n            if (selectedLabel && typeof selectedLabel === \"string\") {\n                !isMobile && setLabel(selectedLabel || props.placeholder);\n            } else if (selectedLabel && typeof selectedLabel === \"function\") {\n                const newLabel: string | string[] = selectedLabel(props.value);\n                !isMobile && setLabel((Array.isArray(newLabel) ? newLabel.join(\", \") : newLabel) || props.placeholder);\n            } else {\n                !isMobile && setLabel((Array.isArray(props.value) ? props.value.join(\", \") : props.value) || props.placeholder);\n            }\n        }, [props.value, props.placeholder, selectedLabel]);\n\n        React.useEffect(() => {\n            // scroll the focused item into view\n            getOptionsRef()?.[focusedIndex]?.scrollIntoView?.(false);\n        }, [focusedIndex, getOptionsRef]);\n\n        React.useEffect(() => {\n            return () => {\n                clearAllBodyScrollLocks();\n            };\n        }, []);\n\n        return (\n            <div {...wrapperProps} className={classnames(\"rc custom-dropdown\", wrapperProps.className)}>\n                {!isMobile && (\n                    <div className={classnames(\"dropdown\", { show, clearable })} ref={dropdownRef}>\n                        <FeedbackIndicator type={indicator?.type} message={null}>\n                            <button\n                                ref={buttonRef}\n                                className=\"btn btn-secondary dropdown-toggle\"\n                                type=\"button\"\n                                id={toggleId}\n                                data-toggle=\"dropdown\"\n                                aria-expanded={show || null}\n                                aria-haspopup=\"listbox\"\n                                aria-labelledby={`${props[\"aria-labelledby\"] ? `${props[\"aria-labelledby\"]} ` : \"\"}${toggleId}`}\n                                onClick={toggleMenu}\n                                disabled={props.disabled}\n                            >\n                                <span>{label}</span>\n                            </button>\n                        </FeedbackIndicator>\n                        {clearable && <CloseButton onClick={() => selectAll(false)} disabled={props.disabled} />}\n                        {!safeDocument\n                            ? null\n                            : createPortal(\n                                  <ul\n                                      ref={menuRef}\n                                      className={classnames(\"rc dropdown-menu\", { show })}\n                                      role=\"listbox\"\n                                      aria-labelledby={props[\"aria-labelledby\"]}\n                                      aria-activedescendant={show ? getOptionsRef()[focusedIndex]?.querySelector<HTMLInputElement>(\"input\").id : null}\n                                      style={{ ...menuStyle }}\n                                      tabIndex={-1}\n                                      onKeyDown={onDropDownKeyDown}\n                                  >\n                                      {searchable && (\n                                          <input\n                                              ref={searchRef}\n                                              type=\"text\"\n                                              className=\"form-control\"\n                                              role=\"combobox\"\n                                              aria-activedescendant={show ? getOptionsRef()[focusedIndex]?.querySelector<HTMLInputElement>(\"input\").id : null}\n                                              aria-autocomplete=\"list\"\n                                              aria-expanded={show}\n                                              aria-haspopup=\"true\"\n                                              aria-owns={dropdownId}\n                                              placeholder={text.search || defaultText.search}\n                                              value={searchKeyword}\n                                              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchKeyword(e.target.value)}\n                                              onKeyDown={onSearchInputKeyDown}\n                                          />\n                                      )}\n                                      {/* Select all button */}\n                                      {multiple && !searchKeyword && isAllSelectable ? (\n                                          React.Children.count(props.children) ? (\n                                              <>\n                                                  <li className={classnames(\"custom-control custom-checkbox select-all\", { focused: focusedIndex === 0 })}>\n                                                      <input id={selectAllId} name=\"inline\" type=\"checkbox\" className=\"custom-control-input\" checked={allSelected} hidden onChange={selectAll} />\n                                                      <label className=\"custom-control-label\" htmlFor={selectAllId}>\n                                                          {text.selectAll || defaultText.selectAll}\n                                                      </label>\n                                                  </li>\n                                                  <div className=\"dropdown-divider\" />\n                                              </>\n                                          ) : (\n                                              text.emptyList || defaultText.emptyList\n                                          )\n                                      ) : null}\n\n                                      {getOptions()}\n                                  </ul>,\n                                  safeDocument.body\n                              )}\n                    </div>\n                )}\n                <FeedbackIndicator type={indicator?.type} message={indicator?.message}>\n                    <select {...props} ref={measuredSelectRef} onChange={onDropDownChange} className={classnames(\"custom-select\", props.className)} hidden={!isMobile}>\n                        {/* select always picks the first item by default. Therefore the first needs to be initialized here */}\n                        {!props.value && (\n                            <option disabled value=\"\" hidden>\n                                {props.placeholder}\n                            </option>\n                        )}\n                        {React.Children.toArray(props.children).filter((Child: any) => [\"option\", \"optgroup\"].includes(Child.type))}\n                    </select>\n                </FeedbackIndicator>\n\n                {clearable && isMobile && <CloseButton onClick={() => selectAll(false)} disabled={props.disabled} />}\n            </div>\n        );\n    }\n);\n","import classnames from \"classnames\";\nimport React from \"react\";\nimport \"./feedback-indicator.scss\";\n\nexport type IndicatorType = \"danger\" | \"warning\" | \"success\" | \"none\";\nexport type Indicator = FeedbackIndicatorProps;\n\ntype FeedbackIndicatorProps = React.PropsWithChildren<{\n    /** The type of the indicator. Available values: \"danger\" | \"warning\" | \"success\" */\n    type: IndicatorType;\n    /** The indicator message. `children` can also be used instead. */\n    message?: React.ReactNode;\n    /** Disable feedback indicator border */\n    noBorder?: boolean;\n    /** The feedback indicator identifier. */\n    id?: string;\n}>;\n/** A helper component to display feedback for children content */\nexport const FeedbackIndicator: React.FC<FeedbackIndicatorProps> = (props: FeedbackIndicatorProps) => {\n    const [indicatorValue, setIndicatorValue] = React.useState<number>(0);\n\n    React.useEffect(() => {\n        switch (props.type) {\n            case \"danger\":\n                setIndicatorValue(10);\n                break;\n            case \"warning\":\n                setIndicatorValue(50);\n                break;\n            case \"success\":\n                setIndicatorValue(100);\n                break;\n            default:\n                setIndicatorValue(0);\n        }\n    }, [props.type]);\n\n    function wrap(children: any) {\n        const Child: any = React.Children.toArray(children)[0];\n\n        return React.isValidElement(Child) ? (\n            <>\n                {React.cloneElement<any>(Child as any, {\n                    className: classnames((Child.props as any).className, `rc-d feedback feedback-${indicatorValue}`, { \"no-border\": props.noBorder }, { \"mb-0\": props.message }),\n                })}\n                {props.type && (\n                    <p className={classnames(\"rc-d feedback-message\")} role=\"alert\" id={props.id}>\n                        {props.message}\n                    </p>\n                )}\n            </>\n        ) : (\n            Child\n        );\n    }\n\n    const count: number = React.Children.count(props.children);\n\n    return count ? (props.type ? wrap(count > 1 ? <div>{props.children}</div> : props.children) : props.children) : null;\n};\n","import { randomId } from \"@sebgroup/frontend-tools/randomId\";\nimport classnames from \"classnames\";\nimport React from \"react\";\nimport { FeedbackIndicator, Indicator } from \"../FeedbackIndicator\";\nimport \"./textbox.scss\";\n\nexport type TextboxProps = JSX.IntrinsicElements[\"input\"] & {\n    /** Element label */\n    label?: string;\n    /** Element instruction */\n    instruction?: string;\n    /** Element prefix slot */\n    leftSlot?: React.ReactNode;\n    /** Element prefix title */\n    leftSlotTitle?: string;\n    /** Callback when prefix button is clicked */\n    onLeftClick?: (event: React.MouseEvent<HTMLDivElement>) => void;\n    /** Callback when suffix button is clicked */\n    onRightClick?: (event: React.MouseEvent<HTMLDivElement>) => void;\n    /** Component associates with input ref */\n    reference?: React.RefObject<HTMLInputElement>;\n    /** Element suffix slot */\n    rightSlot?: React.ReactNode;\n    /** Element suffix title */\n    rightSlotTitle?: string;\n    /** Feedback indicator object */\n    indicator?: Indicator;\n    /** Wrapper props */\n    wrapperProps?: JSX.IntrinsicElements[\"div\"];\n};\n/** Textbox is a component that allows user to add or edit text with extra text or icon port */\nexport const Textbox: React.FC<TextboxProps> = React.forwardRef(\n    ({ leftSlot, leftSlotTitle, onLeftClick, rightSlot, rightSlotTitle, onRightClick, indicator, wrapperProps = {}, ...props }: TextboxProps, ref: React.ForwardedRef<HTMLInputElement>) => {\n        const [customId, setCustomId] = React.useState<string>(null);\n        const labelId: string = randomId(\"tbgl-\");\n\n        React.useEffect(() => setCustomId(props.id ? props.id : props.label ? randomId(\"tbg-\") : null), [props.id]);\n\n        return (\n            <div {...wrapperProps} className={classnames(\"rc input-box-group\", wrapperProps.className)}>\n                {props.label && (\n                    <label id={labelId} className=\"custom-label\" htmlFor={customId}>\n                        {props.label}\n                    </label>\n                )}\n                {props.instruction && <p className=\"custom-instruction\">{props.instruction}</p>}\n                <div className={classnames(\"rc input-group\", { disabled: props.disabled })}>\n                    <FeedbackIndicator {...indicator}>\n                        <div className=\"input-box-group-wrapper\">\n                            {leftSlot && (\n                                <div\n                                    className={classnames(\"input-group-prepend\", { clickable: onLeftClick })}\n                                    role={onLeftClick ? \"button\" : null}\n                                    onClick={onLeftClick}\n                                    tabIndex={onLeftClick ? 0 : null}\n                                    aria-hidden={onLeftClick ? null : \"true\"}\n                                    aria-describedby={leftSlotTitle ? null : labelId}\n                                >\n                                    <span className=\"input-group-text\" title={leftSlotTitle}>\n                                        {leftSlot}\n                                    </span>\n                                </div>\n                            )}\n                            <input {...props} ref={ref} id={customId} className={classnames(\"form-control\", props.className)} />\n                            {rightSlot && (\n                                <div\n                                    className={classnames(\"input-group-append\", { clickable: onRightClick })}\n                                    onClick={onRightClick}\n                                    role={onRightClick ? \"button\" : null}\n                                    tabIndex={onRightClick ? 0 : null}\n                                    aria-hidden={onRightClick ? null : \"true\"}\n                                    aria-describedby={rightSlotTitle ? null : labelId}\n                                >\n                                    <span className=\"input-group-text\" title={rightSlotTitle}>\n                                        {rightSlot}\n                                    </span>\n                                </div>\n                            )}\n                        </div>\n                    </FeedbackIndicator>\n                </div>\n            </div>\n        );\n    }\n);\n","export enum Key {\n    ArrowDown = \"ArrowDown\",\n    ArrowUp = \"ArrowUp\",\n    ArrowLeft = \"ArrowLeft\",\n    ArrowRight = \"ArrowRight\",\n    Escape = \"Escape\",\n    End = \"End\",\n    Enter = \"Enter\",\n    Home = \"Home\",\n    PageDown = \"PageDown\",\n    PageUp = \"PageUp\",\n    Space = \" \",\n    Shift = \"Shift\",\n    Tab = \"Tab\",\n    Delete = \"Delete\",\n}\n\n/**\n * Detect if a modifier key is pressed along with the current key event.\n *\n * @param {object} event - Keyboard event\n * @returns true if key pressed is combined with modifier key, false otherwise\n */\nexport function hasModifierKey({ altKey, ctrlKey, metaKey, shiftKey }: React.KeyboardEvent) {\n    return altKey || ctrlKey || metaKey || shiftKey;\n}\n","var React = require('react');\n\nfunction ExternalLink (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"d\":\"M1.5 13A1.5 1.5 0 0 0 3 14.5h8a1.5 1.5 0 0 0 1.5-1.5V9a.5.5 0 0 0-1 0v4a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5V5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 0 0-1H3A1.5 1.5 0 0 0 1.5 5v8zm7-11a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 .5.5v5a.5.5 0 0 1-1 0V2.5H9a.5.5 0 0 1-.5-.5z\",\"key\":0}),React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"d\":\"M14.354 1.646a.5.5 0 0 1 0 .708l-8 8a.5.5 0 0 1-.708-.708l8-8a.5.5 0 0 1 .708 0z\",\"key\":1})]);\n}\n\nExternalLink.defaultProps = {\"width\":\"1em\",\"height\":\"1em\",\"fill\":\"currentColor\",\"viewBox\":\"0 0 16 16\"};\n\nmodule.exports = ExternalLink;\n\nExternalLink.default = ExternalLink;\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["randomId","exports","Object","defineProperty","value","seed","String","Math","random","Date","getTime","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","prototype","key","call","join","module","Footer","React","className","href","target","rel","title","src","alt","versions","require","props","currentVersion","setCurrentVersion","formattedList","setFormattedList","currentpath","window","location","regex","RegExp","matchedVersions","match","name","map","item","label","replace","Dropdown","wrapperProps","classnames","selectedLabel","find","_formattedList$find","onChange","e","pkg","index","urls","releases","github","contribute","issues","v4","imageUrl","homepage","siteName","metaConfigs","keywords","siteUrl","description","sitePreviewImageUrl","jsonLD","url","image","screenshot","applicationCategory","operatingSystem","author","logo","useIsMobile","mobileQuery","mediaQueryLists","matchMedia","useState","matches","isMobile","setIsMobile","useEffect","handler","addEventListener","removeEventListener","CloseButton","ref","hasPassiveEvents","passiveTestOptions","passive","isIosDevice","navigator","platform","test","maxTouchPoints","locks","documentListenerAdded","initialClientY","previousBodyOverflowSetting","previousBodyPosition","previousBodyPaddingRight","allowTouchMove","el","some","lock","options","preventDefault","rawEvent","event","touches","restoreOverflowSetting","undefined","document","body","style","paddingRight","overflow","restorePositionSetting","y","parseInt","top","x","left","position","scrollTo","disableBodyScroll","targetElement","concat","arr","arr2","from","_toConsumableArray","requestAnimationFrame","_window","scrollY","scrollX","innerHeight","setTimeout","bottomBarHeight","_reserveScrollBarGap","reserveScrollBarGap","scrollBarGap","innerWidth","documentElement","clientWidth","computedBodyPaddingRight","getComputedStyle","getPropertyValue","setOverflowHidden","ontouchstart","targetTouches","clientY","ontouchmove","scrollTop","scrollHeight","clientHeight","isTargetElementTotallyScrolled","stopPropagation","handleScroll","console","error","CustomDropdownItem","focused","multiple","children","id","selected","checked","role","type","hidden","htmlFor","defaultText","getValueOfMultipleSelect","selectOptions","filter","option","bodyScrollOptions","safeDocument","safeWindow","_safeWindow$navigator","userAgent","runningIndex","list","text","onMultipleChange","clearable","indicator","isAllSelectable","searchable","dropdownId","toggleId","selectAllId","show","setShow","allSelected","setAllSelected","searchKeyword","setSearchKeyword","menuStyle","setMenuStyle","setLabel","selectRef","setSelectRef","selectRefOptions","setSelectRefOptions","focusedIndex","setFocusedIndex","buttonRef","dropdownRef","menuRef","searchRef","prestine","setPrestine","handleDropdownMenuOpen","current","handleDropdownMenuClose","changeValue","dispatchEvent","Event","bubbles","getOptionsRef","querySelectorAll","handleChange","selectAll","forceValue","forEach","disabled","isAllSelected","every","toggleMenu","rect","currentTarget","getBoundingClientRect","height","bottom","minWidth","width","maxHeight","toggleOption","optionRef","classList","contains","querySelector","_optionRef$querySelec","onDropDownChange","onDropDownKeyDown","optionsRef","Key","direction","onSearchInputKeyDown","measuredSelectRef","node","detectBlur","focus","selectedOption","_menuRef$current2","indexOf","_buttonRef$current","placeholder","newLabel","scrollIntoView","FeedbackIndicator","message","onClick","createPortal","_getOptionsRef$focuse3","tabIndex","onKeyDown","_getOptionsRef$focuse4","search","emptyList","Child","filteredBySearch","element","keyword","toLowerCase","trim","_element$props","includes","_Child$props","groupChild","noResult","indicatorValue","setIndicatorValue","count","noBorder","Textbox","leftSlot","leftSlotTitle","onLeftClick","rightSlot","rightSlotTitle","onRightClick","customId","setCustomId","labelId","instruction","clickable","ExternalLink","createElement","defaultProps","default","arrayLikeToArray","__esModule","obj","enumerable","configurable","writable","iter","Symbol","iterator","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_objectWithoutPropertiesLoose","source","excluded","sourceKeys","keys"],"sourceRoot":""}