"use strict";(self.webpackChunkreact_components_docs=self.webpackChunkreact_components_docs||[]).push([[4929],{3568:function(e,t,n){n.r(t);var i=n(27378),o=n(2634),a=n(22754),s=n(91448),l=n(38535),r=n(29416),c=n(7118),m=[{label:"slide",value:"slide",key:"slide",additionalProps:{wrapperProps:{className:"d-inline-block"}}},{label:"bar",value:"bar",key:"bar",additionalProps:{wrapperProps:{className:"d-inline-block"}}}],d=[{label:"purple",value:"purple",key:"purple"},{label:"primary",value:"primary",key:"primary"},{label:"danger",value:"danger",key:"danger"},{label:"success",value:"success",key:"success"},{label:"warning",value:"warning",key:"warning"},{label:"inverted",value:"inverted",key:"inverted"}],p=[{label:"bottom-left",value:"bottom-left",key:"bottom-left"},{label:"bottom-right",value:"bottom-right",key:"bottom-right"},{label:"top-left",value:"top-left",key:"top-left"},{label:"top-right",value:"top-right",key:"top-right"}],u=[{label:"top",value:"top",key:"top",additionalProps:{wrapperProps:{className:"d-inline-block"}}},{label:"bottom",value:"bottom",key:"bottom",additionalProps:{wrapperProps:{className:"d-inline-block"}}}];t.default=function(){var e=i.useState(!1),t=e[0],n=e[1],f=(0,s.b)([{key:"controls",items:[{key:"theme",label:"theme",controlType:"Dropdown",options:d,initialValue:d[0].value},{key:"persist",label:"persist",initialValue:!1,controlType:"Checkbox",description:"Disable timer and persist the notification until dismissed"},{key:"type",label:"type",controlType:"Radio",options:m,initialValue:m[0].value},{key:"header",label:"header",controlType:"Text",initialValue:"Sunt qui quasi nam."},{key:"slidePosition",label:"position",controlType:"Dropdown",options:p,initialValue:p[0].value},{key:"barPosition",label:"position",controlType:"Radio",options:u,initialValue:u[0].value}]}]),b=f.renderForm,v=f.state.controls,h=f.setHidden;return(0,i.useEffect)((function(){h("controls","slidePosition",v.type!==m[0].value),h("controls","barPosition",v.type!==m[1].value)}),[v.type]),i.createElement(o.Z,{mainFile:c,example:i.createElement(i.Fragment,null,i.createElement(l.z,{onClick:function(){return n(!t)}},"Toggle notification"),i.createElement(a.P,{toggle:t,type:v.type,theme:v.theme,position:"slide"===v.type?v.slidePosition:v.barPosition,onDismiss:function(){return n(!1)},persist:v.persist,"aria-live":"polite"},i.createElement("div",{className:"notification-header"},v.header),i.createElement("div",{className:"notification-body"},"Eaque dolorem nisi qui ut nemo perferendis. Veniam voluptates alias voluptatum ratione. Et alias incidunt maiores provident rem ea molestiae ea."))),code:'<Notification toggle={toggle} onDismiss={() => setToggle(false)}>\n    <div className="notification-header">Header content</div>\n    <div className="notification-body">Body content</div>\n</Notification>',controls:b(),note:i.createElement(i.Fragment,null,i.createElement("h3",null,"Notification header and body"),i.createElement("p",null,"Defining the notification's header and body is done in a declarative style. Meaning that the developer is responsive for declaring these parts individually if needed. Remember to pass the following class names:"),i.createElement("ul",null,i.createElement("li",null,i.createElement("code",null,"notificaiton-header")," for the ",i.createElement("code",null,"div")," representing the header"),i.createElement("li",null,i.createElement("code",null,"notificaiton-body")," for the ",i.createElement("code",null,"div")," representing the body")),"An example can be found below:",i.createElement(r.O,{language:"jsx"},'<Notification>\n    <div className="notification-header">Header content here</div>\n    <div className="notification-body">Body content here</div>\n</Notification>'))})}},38535:function(e,t,n){n.d(t,{z:function(){return r}});var i=n(30808),o=n(27378),a=n(508),s=n.n(a),l=["theme","size","block"],r=o.memo(o.forwardRef((function(e,t){var n,a=e.theme,r=void 0===a?"primary":a,c=e.size,m=e.block,d=(0,i.Z)(e,l);return o.createElement("button",Object.assign({},d,{ref:t,className:s()("rc","btn","btn-"+r,(n={},n["btn-"+c]=c,n["btn-block"]=m,n),d.className)}),d.children)})))},22754:function(e,t,n){n.d(t,{P:function(){return m}});var i=n(30808),o=n(27378),a=n(31542),s=n(508),l=n.n(s),r=["toggle","type","theme","position","onDismiss","dismissTimeout","persist","contentWrapperProps"],c="undefined"!=typeof document?document:null,m=o.forwardRef((function(e,t){var n,s=e.toggle,m=e.type,d=void 0===m?"slide":m,p=e.theme,u=void 0===p?"purple":p,f=e.position,b=void 0===f?"bottom-left":f,v=e.onDismiss,h=e.dismissTimeout,y=void 0===h?5e3:h,g=e.persist,E=e.contentWrapperProps,k=void 0===E?{}:E,N=(0,i.Z)(e,r),P=o.useRef(),R=o.useState(!1),w=R[0],T=R[1],D=o.useState(!0),A=D[0],C=D[1];return o.useEffect((function(){s?(A&&C(!1),g||(P.current=setTimeout((function(){P.current&&v&&v(new Event("dismiss")),clearTimeout(P.current)}),y))):(clearTimeout(P.current),T(!1))}),[s]),o.useEffect((function(){g&&clearTimeout(P.current)}),[g]),c?(0,a.createPortal)(o.createElement("div",Object.assign({},N,{ref:t,className:l()("rc","notification",(n={show:s,hide:!s&&!A},n["theme-"+u]=u,n["type-"+d]=d,n),b,N.className),onAnimationEnd:function(e){N.onAnimationEnd&&N.onAnimationEnd(e),!s&&C(!0),T(s)}}),o.createElement("div",Object.assign({},k,{className:l()("content-wrapper",{clickable:N.onClick,visible:w})}),N.children,o.createElement("button",{className:"close",onClick:v}))),c.body):null}))},7118:function(e,t,n){n.r(t),t.default='import React from "react";\nimport { createPortal } from "react-dom";\nimport classnames from "classnames";\nimport "./notification.scss";\n\ntype CommonProps = JSX.IntrinsicElements["div"] & {\n    /** Automatic dismissal timeout in milliseconds (default: `5000`) */\n    dismissTimeout?: number;\n    /** Callback when notification is dismissed */\n    onDismiss?: (e: React.MouseEvent<HTMLButtonElement> | Event) => void;\n    /** Persist notification until dismissed (default: `false`) */\n    persist?: boolean;\n    /** Notification theme */\n    theme?: "purple" | "primary" | "danger" | "success" | "warning" | "inverted";\n    /** Property sets whether the notification is toggled */\n    toggle?: boolean;\n    /** content wrapper props */\n    contentWrapperProps?: JSX.IntrinsicElements["div"];\n};\n\ninterface SlideNotification extends CommonProps {\n    /** Notification type: `slide` */\n    type?: "slide";\n    /** Notification position: `bottom-left` | `bottom-right` | `top-left` | `top-right` */\n    position?: "bottom-left" | "bottom-right" | "top-left" | "top-right";\n}\n\ninterface BarNotification extends CommonProps {\n    /** Notification type: `bar` */\n    type?: "bar";\n    /** Notification position: `top` | `bottom` */\n    position?: "top" | "bottom";\n}\n\nexport type NotificationProps = SlideNotification | BarNotification;\n\n// This solution is meant to fix Gatsby build which complains that document doesn\'t exist in server-side rendering\nconst safeDocument: Document | null = typeof document !== "undefined" ? document : null;\n\n/** An alert which pops up on the page to inform the user of an event which occured and optionally provide actions to perform. */\nexport const Notification: React.FC<NotificationProps> = React.forwardRef(\n    (\n        { toggle, type = "slide", theme = "purple", position = "bottom-left", onDismiss, dismissTimeout = 5000, persist, contentWrapperProps = {}, ...props }: NotificationProps,\n        ref: React.ForwardedRef<HTMLDivElement>\n    ) => {\n        const timerRef: React.MutableRefObject<any> = React.useRef();\n        const [isAnimationEnded, setIsAnimationEnded] = React.useState<boolean>(false);\n        const [disableAnimation, setDisableAnimation] = React.useState<boolean>(true);\n\n        React.useEffect(() => {\n            if (toggle) {\n                disableAnimation && setDisableAnimation(false);\n                if (!persist) {\n                    timerRef.current = setTimeout(() => {\n                        timerRef.current && onDismiss && onDismiss(new Event("dismiss"));\n                        clearTimeout(timerRef.current);\n                    }, dismissTimeout);\n                }\n            } else {\n                clearTimeout(timerRef.current);\n                setIsAnimationEnded(false);\n            }\n        }, [toggle]);\n\n        React.useEffect(() => {\n            persist && clearTimeout(timerRef.current);\n        }, [persist]);\n\n        return !safeDocument\n            ? null\n            : createPortal(\n                  <div\n                      {...props}\n                      ref={ref}\n                      className={classnames(\n                          "rc",\n                          "notification",\n                          {\n                              show: toggle,\n                              hide: !toggle && !disableAnimation,\n                              [`theme-${theme}`]: theme,\n                              [`type-${type}`]: type,\n                          },\n                          position,\n                          props.className\n                      )}\n                      onAnimationEnd={(e) => {\n                          props.onAnimationEnd && props.onAnimationEnd(e);\n                          !toggle && setDisableAnimation(true);\n                          setIsAnimationEnded(toggle);\n                      }}\n                  >\n                      <div {...contentWrapperProps} className={classnames(`content-wrapper`, { clickable: props.onClick, visible: isAnimationEnded })}>\n                          {props.children}\n                          <button className="close" onClick={onDismiss}></button>\n                      </div>\n                  </div>,\n                  safeDocument.body\n              );\n    }\n) as React.ForwardRefExoticComponent<React.PropsWithoutRef<SlideNotification & BarNotification> & React.RefAttributes<HTMLDivElement>>;\n'}}]);
//# sourceMappingURL=component---src-pages-docs-notification-tsx-9c83c656ecb3fe4d8658.js.map