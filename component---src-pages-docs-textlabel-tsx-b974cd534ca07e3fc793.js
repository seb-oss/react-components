"use strict";(self.webpackChunkreact_components_docs=self.webpackChunkreact_components_docs||[]).push([[6244],{90725:function(e,a,l){l.r(a),l.d(a,{default:function(){return b}});var t=l(27378),n=l(2634),s=l(30808),o=l(508),r=l.n(o),c=["label","value"],m=t.memo(t.forwardRef((function(e,a){var l=e.label,n=e.value,o=(0,s.Z)(e,c);return t.createElement("div",Object.assign({},o,{ref:a,className:r()("text-label",o.className)}),l&&t.createElement("label",{className:"custom-label"},l),t.createElement("div",{className:"custom-label-value"},n))}))),u=l(91448),b=t.memo((function(){var e,a,s=l(76171),o=(0,u.b)([{key:"controls",items:[{label:"Optional configurations",key:"checkboxes",controlType:"Option",options:[{label:"Custom html label and value",value:"customLabelAndValue",key:"customLabelAndValue"}]}]}]),r=o.renderForm,c=o.state.controls;return t.createElement(n.Z,{mainFile:s,example:t.createElement(m,{value:(e="customLabelAndValue",(null===(a=c.checkboxes)||void 0===a?void 0:a.find((function(a){return a===e})))?t.createElement(t.Fragment,null,"400,000 kr ",t.createElement("span",{className:"pl-1 text-primary"},"More description")):"Some text value"),label:"Current savings"}),code:'<TextLabel value="Some text value" label="Some text label" />',controls:r()})}))},76171:function(e,a,l){l.r(a),a.default='import React from "react";\nimport "./textlabel.scss";\nimport classnames from "classnames";\n\nexport type TextLabelProps = JSX.IntrinsicElements["div"] & {\n    /** Optional label for the textLabel can be a string or a template. */\n    label?: string | React.ReactNode;\n    /** Optional label for the text label can be a string or a template. */\n    value: string | number | React.ReactNode;\n};\n\n/** A text label is a component to display value with label */\nexport const TextLabel: React.FC<TextLabelProps> = React.memo(\n    React.forwardRef(({ label, value, ...props }: TextLabelProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n        return (\n            <div {...props} ref={ref} className={classnames("text-label", props.className)}>\n                {label && <label className="custom-label">{label}</label>}\n                <div className="custom-label-value">{value}</div>\n            </div>\n        );\n    })\n);\n'}}]);
//# sourceMappingURL=component---src-pages-docs-textlabel-tsx-b974cd534ca07e3fc793.js.map