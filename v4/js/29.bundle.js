(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{1083:function(t,e){t.exports="<hr> <p>title: TextBox componentid: component-input variantid: default guid: &quot;input-textbox-guid-default-component-react&quot;</p> <hr> <h2 id=element-name>Element name</h2> <pre><code class=language-javascript>Name: TextBox Component\nComponent: &quot;TextBox&quot;\nSelector: &quot;&lt;TextBox/&gt;&quot;\nImport: &quot;@sebgroup/react-components/dist/TextBox&quot;\nType: Form Component</code></pre> <h2 id=element-information>Element information</h2> <p>This React component is based on SEB Bootstrap style. Supports customization and configurations. The component name is <code>TextBox</code> and the selector is <code>&lt;TextBox/&gt;</code>.</p> <h2 id=basic-use>Basic use</h2> <pre><code class=language-html>&lt;TextBox name=&quot;textInput&quot; placeholder=&quot;Text Box placeholder&quot; value={this.state.textBox} onChange={(event) =&gt; {\nthis.setState({ textBoxValue: event.target.value }); }} /&gt;</code></pre> <h2 id=properties>Properties</h2> <p>These are the current available properties:</p> <table> <thead> <tr> <th>Property</th> <th>Type</th> <th>Description</th> </tr> </thead> <tbody><tr> <td>autoComplete?</td> <td><code>on</code> or <code>off</code></td> <td>Enable autocomplete</td> </tr> <tr> <td>className?</td> <td><code>string</code></td> <td>Custom class</td> </tr> <tr> <td>disabled?</td> <td><code>boolean</code></td> <td>Disable input element. (default: <code>false</code>)</td> </tr> <tr> <td>error?</td> <td><code>string</code></td> <td>Error text</td> </tr> <tr> <td>focus?</td> <td><code>boolean</code></td> <td>Enable autofocus. (default: <code>false</code>)</td> </tr> <tr> <td>id?</td> <td><code>string</code></td> <td>Id string</td> </tr> <tr> <td>label?</td> <td><code>string</code></td> <td>The small label on top of the textbox</td> </tr> <tr> <td>maxLength?</td> <td><code>number</code></td> <td>Input max length</td> </tr> <tr> <td>minLength?</td> <td><code>number</code></td> <td>Input min length</td> </tr> <tr> <td>name</td> <td><code>string</code></td> <td>Name string</td> </tr> <tr> <td>onBlur?</td> <td><code>(event: React.FocusEvent&lt;HTMLInputElement&gt;) =&gt; void</code></td> <td>On <code>&#39;blur&#39;</code> event</td> </tr> <tr> <td>onChange</td> <td><code>(event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; void</code></td> <td>On <code>&#39;change&#39;</code> event</td> </tr> <tr> <td>onFocus?</td> <td><code>(event: React.FocusEvent&lt;HTMLInputElement&gt;) =&gt; void</code></td> <td>On <code>&#39;focus&#39;</code> event</td> </tr> <tr> <td>onKeyDown?</td> <td><code>(event: React.KeyboardEvent&lt;HTMLInputElement&gt;) =&gt; void</code></td> <td>On <code>&#39;keydown&#39;</code> event</td> </tr> <tr> <td>onKeyPress?</td> <td><code>(event: React.KeyboardEvent&lt;HTMLInputElement&gt;) =&gt; void</code></td> <td>On <code>&#39;keypress&#39;</code> event</td> </tr> <tr> <td>onKeyUp?</td> <td><code>(event: React.KeyboardEvent&lt;HTMLInputElement&gt;) =&gt; void</code></td> <td>On <code>&#39;keyup&#39;</code> event</td> </tr> <tr> <td>pattern?</td> <td><code>string</code></td> <td>Pattern string</td> </tr> <tr> <td>placeholder?</td> <td><code>string</code></td> <td>Placeholder text</td> </tr> <tr> <td>readOnly?</td> <td><code>boolean</code></td> <td>Make input element readonly. (default: <code>false</code>)</td> </tr> <tr> <td>reference?</td> <td><code>React.RefObject&lt;HTMLInputElement&gt;</code></td> <td>React Ref obj</td> </tr> <tr> <td>required?</td> <td><code>boolean</code></td> <td>Required atribute</td> </tr> <tr> <td>showErrorMessage?</td> <td><code>boolean</code></td> <td>Show or hide the error message<sup>1</sup>(default: <code>true</code>)</td> </tr> <tr> <td>success</td> <td><code>boolean</code></td> <td>Success status</td> </tr> <tr> <td>type?</td> <td><code>string</code></td> <td>Input type. (default: <code>&#39;text&#39;</code>)</td> </tr> <tr> <td>value</td> <td><code>string</code></td> <td>Value string</td> </tr> </tbody></table> <h2 id=footnote>Footnote</h2> <ol> <li>Showing or hiding the error message does not affect the <span style=color:red>red</span> border indicator for the property <code>error</code></li> </ol> "},175:function(t,e,o){"use strict";o.r(e);var d=o(0),r=o(472),n=o(450),a=o.n(n),c=o(1083);e.default=function(){var t=d.useState(""),e=t[0],o=t[1],n=d.useState("Not good"),l=n[0],s=n[1],i=d.useState("All good"),u=i[0],p=i[1];return d.createElement("div",{className:"route-template container"},d.createElement("div",{className:"info-holder"},d.createElement("div",{className:"info"},d.createElement("div",{className:"md-file"},d.createElement(a.a,{innerHTML:!0},c))),d.createElement("div",{className:"info"},d.createElement("h2",null,"Output"),d.createElement("p",null,"Here is the basic bootstrap one:"),d.createElement("div",{className:"result"},d.createElement(r.a,{name:"textInput",label:"Textbox label",placeholder:"Text Box PlaceHolder",value:e,onChange:function(t){return o(t.target.value)}})),d.createElement("p",null,"Here is the input with error:"),d.createElement("div",{className:"result"},d.createElement(r.a,{name:"textInput2",placeholder:"Text Box PlaceHolder",error:"error msg will be shown here",value:l,onChange:function(t){return s(t.target.value)}})),d.createElement("p",null,"Here is the input with success:"),d.createElement("div",{className:"result"},d.createElement(r.a,{name:"textInput3",placeholder:"Text Box PlaceHolder",value:u,success:!0,onChange:function(t){return p(t.target.value)}})))))}},472:function(t,e,o){"use strict";o.d(e,"a",(function(){return n}));var d=o(0),r=(o(473),o(114)),n=function(t){var e=d.useState(null),o=e[0],n=e[1],a=d.useState(!0),c=a[0],l=a[1];return d.useEffect((function(){n(t.id?t.id:t.label?Object(r.randomId)("tbg-"):null)}),[t.id,t.label]),d.useEffect((function(){t.success||!1===t.showErrorMessage?l(!1):l(!0)}),[t.showErrorMessage,t.success]),d.createElement("div",{className:"form-group input-box"+(t.className?" "+t.className:"")},d.createElement("div",{className:"input-field"+(t.success?" success":t.error?" has-error":"")},t.label&&d.createElement("label",{className:"custom-label",htmlFor:o},t.label),d.createElement("input",{id:o,name:t.name,type:t.type,pattern:t.pattern,required:t.required,minLength:t.minLength,maxLength:t.maxLength,value:String(t.value),onChange:t.onChange,onKeyDown:t.onKeyDown,onKeyUp:t.onKeyUp,onKeyPress:t.onKeyPress,onFocus:t.onFocus,onBlur:t.onBlur,placeholder:t.placeholder,className:"form-control",autoFocus:t.focus,autoComplete:t.autoComplete,readOnly:t.readOnly,disabled:t.disabled,ref:t.reference}),c&&d.createElement("div",{className:"alert alert-danger"},t.error)))}},473:function(t,e,o){var d=o(61),r=o(474);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[t.i,r,""]]);var n={insert:"head",singleton:!1};d(r,n);t.exports=r.locals||{}},474:function(t,e,o){(e=o(54)(!1)).push([t.i,".form-group.input-box>.input-field>input.form-control{color:#333;border:1px solid #adadad;-webkit-transition:border 100ms;-o-transition:border 100ms;-moz-transition:border 100ms;transition:border 100ms}.form-group.input-box>.input-field>input.form-control:not(:disabled):hover{border-color:#41B0EE;background-color:#fff}.form-group.input-box>.input-field>input.form-control:not(:disabled):focus{border-color:#007AC7;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background-color:#fff}.form-group.input-box>.input-field>input.form-control:not(:disabled):focus:active{border-color:#007AC7;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none;background-color:#fff}.form-group.input-box>.input-field>.alert{opacity:0;margin:0;padding:0;background:transparent;max-height:0;border:none;-webkit-border-radius:0px;-moz-border-radius:0px;border-radius:0px;overflow:hidden;width:100%;-webkit-transition:opacity 200ms,padding 200ms,max-height 400ms;-o-transition:opacity 200ms,padding 200ms,max-height 400ms;-moz-transition:opacity 200ms,padding 200ms,max-height 400ms;transition:opacity 200ms,padding 200ms,max-height 400ms}.form-group.input-box>.input-field>.alert.alert-danger{color:#F03529}.form-group.input-box>.input-field.has-error>input.form-control:not(:disabled){border-bottom:2px inset #F03529}.form-group.input-box>.input-field.has-error>.alert{opacity:1;padding-top:2px;max-height:100px}.form-group.input-box>.input-field.success>input.form-control:not(:disabled){border-bottom:2px inset #60cd18}\n",""]),t.exports=e}}]);