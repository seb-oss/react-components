"use strict";(self.webpackChunkreact_components_docs=self.webpackChunkreact_components_docs||[]).push([[1082],{72825:function(e,t,n){n.r(t);var s=n(27378),o=n(2634),a=n(56856),i=n(38535),l=n(35295);t.default=function(){var e=s.useState(!0),t=e[0],n=e[1];return s.createElement(o.Z,{mainFile:l,example:s.createElement(a.U,{toggle:t},s.createElement("p",null,"Aut perferendis et. Et necessitatibus aliquid sit. Id illum minus qui atque autem. Qui dolorem amet beatae quasi. Sunt sunt id repellendus rerum."),s.createElement("p",null,"Occaecati vel incidunt id sapiente facere ut itaque repudiandae. Unde numquam sunt totam et delectus. Sit et fugit fuga aut."),s.createElement("p",null,"Sed amet ab. Aut vel ipsam dolore. Ut ratione consequatur autem id adipisci corrupti et nam. Labore rerum debitis nihil sit aut ut mollitia.")),code:"<Collapse toggle={toggle}>content</Collapse>",controls:s.createElement(i.z,{size:"sm",onClick:function(){return n(!t)}},"Toggle collapse")})}},38535:function(e,t,n){n.d(t,{z:function(){return c}});var s=n(30808),o=n(27378),a=n(508),i=n.n(a),l=["theme","size","block"],c=o.memo(o.forwardRef((function(e,t){var n,a=e.theme,c=void 0===a?"primary":a,r=e.size,u=e.block,p=(0,s.Z)(e,l);return o.createElement("button",Object.assign({},p,{ref:t,className:i()("rc","btn","btn-"+c,(n={},n["btn-"+r]=r,n["btn-block"]=u,n),p.className)}),p.children)})))},95757:function(e,t,n){n.d(t,{U:function(){return r}});var s=n(30808),o=n(27378),a=n(508),i=n.n(a),l=n(39275),c=["toggle"],r=o.memo(o.forwardRef((function(e,t){var n=e.toggle,a=void 0!==n&&n,r=(0,s.Z)(e,c),u=(0,l.H)(t),p=o.useState({height:a?"auto":0,display:a?"block":"none",opacity:+a}),d=p[0],f=p[1],m=o.useCallback((function(){f(Object.assign({},d,{display:"block"})),setTimeout((function(){var e;f({display:"block",height:null===(e=u.current)||void 0===e?void 0:e.scrollHeight,opacity:1})}),10)}),[d]),g=o.useCallback((function(){var e;f(Object.assign({},d,{height:null===(e=u.current)||void 0===e?void 0:e.scrollHeight})),setTimeout((function(){f(Object.assign({},d,{height:0,opacity:0}))}),10)}),[d]),h=o.useCallback((function(e){"height"===e.propertyName&&f(a?Object.assign({},d,{height:"auto"}):Object.assign({},d,{display:"none"})),r.onTransitionEnd&&r.onTransitionEnd(e)}),[d,a,r.onTransitionEnd]);return o.useEffect((function(){switch(!0){case a&&0==d.opacity:m();break;case!a&&1==d.opacity:g()}}),[a]),o.createElement("div",Object.assign({},r,{className:i()("custom-collapse",r.className),ref:u,style:d,onTransitionEnd:h}),r.children)})))},56856:function(e,t,n){n.d(t,{U:function(){return s.U}});var s=n(95757)},39275:function(e,t,n){n.d(t,{H:function(){return s.H},b:function(){return o.b}});var s=n(74118),o=n(91448)},35295:function(e,t,n){n.r(t),t.default='import React from "react";\nimport classnames from "classnames";\nimport "./collapse.scss";\nimport { useCombinedRefs } from "../hooks";\n\nexport type CollapseProps = JSX.IntrinsicElements["div"] & {\n    /** True to expand, false to collapse */\n    toggle?: boolean;\n};\n\n/** A helper component for collapsing any content placed inside of it */\nexport const Collapse: React.FC<CollapseProps> = React.memo(\n    React.forwardRef(({ toggle = false, ...props }: CollapseProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n        const collapseRef: React.MutableRefObject<HTMLDivElement> = useCombinedRefs(ref);\n        const [styles, setStyles] = React.useState<React.CSSProperties>({\n            height: toggle ? "auto" : 0,\n            display: toggle ? "block" : "none",\n            opacity: +toggle,\n        });\n\n        /** Expand the content */\n        const expand = React.useCallback((): void => {\n            /** Cannot transition when display is set to `none`, we need to change it to `block` */\n            setStyles({ ...styles, display: "block" });\n            /** This async delay is needed for the height change to take effect */\n            setTimeout(() => {\n                setStyles({ display: "block", height: collapseRef.current?.scrollHeight, opacity: 1 });\n            }, 10);\n        }, [styles]);\n\n        /** Collapse the content */\n        const collapse = React.useCallback((): void => {\n            /** Since height `auto` will not transition, we need to change it to pixels */\n            setStyles({ ...styles, height: collapseRef.current?.scrollHeight });\n            /** This async delay is needed for the height change to take effect */\n            setTimeout(() => {\n                setStyles({ ...styles, height: 0, opacity: 0 });\n            }, 10);\n        }, [styles]);\n\n        /**\n         * An event handler triggered after collapse/expand transition ends\n         * @param e The transition event\n         */\n        const afterTransition = React.useCallback(\n            (e: React.TransitionEvent<HTMLDivElement>): void => {\n                if (e.propertyName === "height") {\n                    if (toggle) {\n                        setStyles({ ...styles, height: "auto" });\n                    } else {\n                        setStyles({ ...styles, display: "none" });\n                    }\n                }\n                props.onTransitionEnd && props.onTransitionEnd(e);\n            },\n            [styles, toggle, props.onTransitionEnd]\n        );\n\n        React.useEffect(() => {\n            switch (true) {\n                case toggle && styles.opacity == 0:\n                    expand();\n                    break;\n                case !toggle && styles.opacity == 1:\n                    collapse();\n                    break;\n            }\n        }, [toggle]);\n\n        return (\n            <div {...props} className={classnames("custom-collapse", props.className)} ref={collapseRef} style={styles} onTransitionEnd={afterTransition}>\n                {props.children}\n            </div>\n        );\n    })\n);\n'}}]);
//# sourceMappingURL=component---src-pages-docs-collapse-tsx-f5db69a7342014a7a52e.js.map