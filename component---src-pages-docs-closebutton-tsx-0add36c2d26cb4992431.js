"use strict";(self.webpackChunkreact_components_docs=self.webpackChunkreact_components_docs||[]).push([[5537],{80979:function(e,t,n){n.r(t);var l=n(27378),a=n(2634),o=n(65891),s=n(24782),r=n(91448),i=n(26174);t.default=function(){var e=l.useState(30),t=e[0],n=e[1],c=(0,r.b)([{key:"controls",items:[{key:"disabled",label:"disabled",controlType:"Checkbox"}]}]),u=c.renderForm,m=c.state.controls;return l.createElement(a.Z,{mainFile:i,example:l.createElement("div",{className:"w-100 d-flex justify-content-center"},l.createElement(o.P,{style:{fontSize:t},onClick:function(){return console.log("Clicked")},disabled:!!m.disabled})),code:"<CloseButton />",controls:l.createElement(l.Fragment,null,l.createElement("p",null,"You can scale up/down the size of the button using font-size"),l.createElement(s.i,{min:10,max:50,step:10,value:t,onChange:function(e){return n(parseInt(e.target.value))}}),u())})}},24782:function(e,t,n){n.d(t,{i:function(){return m}});var l=n(30808),a=n(27378),o=n(508),s=n.n(o),r=n(59196),i=n(75418),c=["alwaysShowTooltip","label","labels","max","min","showTicks","step","theme","alternative","tooltipTheme","tooltipValue","indicator","value","disabled","id"],u="undefined"!=typeof window?window:null,m=a.forwardRef((function(e,t){var n=e.alwaysShowTooltip,o=e.label,m=e.labels,d=e.max,p=e.min,f=e.showTicks,b=e.step,h=e.theme,v=void 0===h?"primary":h,y=e.alternative,_=e.tooltipTheme,g=void 0===_?"inverted":_,k=e.tooltipValue,E=e.indicator,w=e.value,S=e.disabled,C=e.id,N=(0,l.Z)(e,c),T=a.useRef(),R=a.useState(p||0),x=R[0],B=R[1],F=a.useState(d||100),L=F[0],O=F[1],P=a.useState(null),V=P[0],j=P[1],z=a.useState([]),I=z[0],M=z[1],J=a.useState(C),X=J[0],Z=J[1];function q(e){return e>=L?100:e<=x?0:Math.abs((e-x)/(L-x)*100)}return a.useEffect((function(){var e="number"!=typeof d?100:d;B("number"!=typeof p?0:p),O(e)}),[p,d]),a.useEffect((function(){if(m&&m.length){var e=[];m.map((function(t){e.push(q(t.position)+"%")})),M(e)}}),[m,x,L]),a.useEffect((function(){Z(C||(0,i.k)("slider-"))}),[C]),a.useLayoutEffect((function(){var e=null;if(null!=T&&T.current){var t=null==u?void 0:u.getComputedStyle(null==T?void 0:T.current),n=null==u?void 0:u.getComputedStyle(null==T?void 0:T.current.querySelector("input")),l=null==t?void 0:t.getPropertyValue("--slider-background-color"),a=null==t?void 0:t.getPropertyValue("--slider-primary-color"),o=Math.abs((w-x)/(L-x)*100);e="linear-gradient(to right, "+a+" calc("+n.marginLeft+" / 0.25), "+a+" calc("+n.marginLeft+" * 2 + "+o+"%), "+l+" "+o+"%, "+l+" 100%)"}j(e)}),[T,w,v,S]),a.createElement(r.a,Object.assign({},E,{noBorder:!0}),a.createElement("div",{className:s()("rc custom-slider",N.className,"custom-slider--"+v,{"custom-slider--disabled":S})},o&&a.createElement("label",{className:"custom-slider__label",htmlFor:X},o),a.createElement("div",{ref:T,className:s()("custom-slider__input-field",{"custom-slider__input-field--alt":y})},a.createElement("input",Object.assign({},N,{id:X,value:w,disabled:S,style:{background:V},ref:t,type:"range",min:x,max:L,step:b})),a.createElement("div",{"aria-hidden":!0,className:s()("custom-slider__tooltip-wrapper","custom-slider__tooltip-wrapper--"+g,{"custom-slider__tooltip-wrapper--force-show":n})},a.createElement("div",{className:"custom-slider__tooltip",style:{left:q(w)+"%"}},k||w)),m&&m.length?a.createElement("div",{className:"custom-slider__tickmarks","aria-hidden":!0},m.map((function(e,t){return a.createElement("div",{key:t,className:s()("custom-slider__tickmarks-label",{"custom-slider__tickmarks-label--ticks":f}),style:{left:I[t]}},a.createElement("span",null,e.label))}))):null)))}))},26174:function(e,t,n){n.r(t),t.default='import React from "react";\nimport classnames from "classnames";\nimport "./close-button.scss";\n\n/**\n * TODO: This is a component that fixes the broken `.close` element provided by Bootstrap\n * This component should be replaced by the element from Bootstrap when this PR is merged:\n * https://github.com/sebgroup/bootstrap/pull/533\n */\n\nexport const CloseButton: React.FC<JSX.IntrinsicElements["button"]> = React.memo(\n    React.forwardRef((props: JSX.IntrinsicElements["button"], ref: React.ForwardedRef<HTMLButtonElement>) => {\n        return <button ref={ref} {...props} className={classnames("rc close-btn", props.className)} />;\n    })\n);\n'}}]);
//# sourceMappingURL=component---src-pages-docs-closebutton-tsx-0add36c2d26cb4992431.js.map