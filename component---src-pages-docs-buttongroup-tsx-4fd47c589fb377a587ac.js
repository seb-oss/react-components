"use strict";(self.webpackChunkreact_components_docs=self.webpackChunkreact_components_docs||[]).push([[2201],{46642:function(e,n,t){t.r(n),t.d(n,{default:function(){return b}});var r=t(27378),o=t(2634),l=t(30808),a=t(508),s=t.n(a),c=["vertical","size"],i=r.memo(r.forwardRef((function(e,n){var t,o=e.vertical,a=e.size,i=(0,l.Z)(e,c);return r.createElement("div",Object.assign({},i,{ref:n,className:s()("rc","btn-group",(t={},t["btn-group-"+a]=a,t["btn-group-vertical"]=o,t),i.className),role:i.role||"group"}),i.children)}))),p=t(91448),u=t(38535),m=t(5333),d=[{key:"sm",label:"sm",value:"sm",additionalProps:{wrapperProps:{className:"d-inline-block"}}},{key:"md",label:"md",value:"md",additionalProps:{wrapperProps:{className:"d-inline-block"}}},{key:"lg",label:"lg",value:"lg",additionalProps:{wrapperProps:{className:"d-inline-block"}}}],b=function(){var e=(0,p.b)([{key:"controls",items:[{key:"size",label:"size",options:d,controlType:"Radio"},{key:"vertical",label:"vertical",controlType:"Checkbox"}]}]),n=e.renderForm,t=e.state.controls;return r.createElement(o.Z,{mainFile:m,example:r.createElement(i,{size:t.size,vertical:t.vertical},r.createElement(u.z,null,"Add"),r.createElement(u.z,null,"Edit"),r.createElement(u.z,null,"Delete")),code:"<ButtonGroup>\n    <Button>First</Button>\n    <Button>Second</Button>\n    <Button>Third</Button>\n</ButtonGroup>",controls:n()})}},38535:function(e,n,t){t.d(n,{z:function(){return c}});var r=t(30808),o=t(27378),l=t(508),a=t.n(l),s=["theme","size","block"],c=o.memo(o.forwardRef((function(e,n){var t,l=e.theme,c=void 0===l?"primary":l,i=e.size,p=e.block,u=(0,r.Z)(e,s);return o.createElement("button",Object.assign({},u,{ref:n,className:a()("rc","btn","btn-"+c,(t={},t["btn-"+i]=i,t["btn-block"]=p,t),u.className)}),u.children)})))},5333:function(e,n,t){t.r(n),n.default='import React from "react";\nimport classnames from "classnames";\n\nexport type ButtonGroupSizes = "sm" | "md" | "lg";\n\nexport type ButtonGroupProps = JSX.IntrinsicElements["div"] & {\n    /** Display buttons vertically */\n    vertical?: boolean;\n    /** Buttons size in the group. Available sizes: "sm", "md", "lg" */\n    size?: ButtonGroupSizes;\n};\n\n/** Button group wrapper. Use this to group multiple buttons */\nexport const ButtonGroup: React.FC<ButtonGroupProps> = React.memo(\n    React.forwardRef(({ vertical, size, ...props }: ButtonGroupProps, ref: React.ForwardedRef<HTMLDivElement>) => (\n        <div\n            {...props}\n            ref={ref}\n            className={classnames(\n                "rc",\n                "btn-group",\n                {\n                    [`btn-group-${size}`]: size,\n                    "btn-group-vertical": vertical,\n                },\n                props.className\n            )}\n            role={props.role || "group"}\n        >\n            {props.children}\n        </div>\n    ))\n);\n'}}]);
//# sourceMappingURL=component---src-pages-docs-buttongroup-tsx-4fd47c589fb377a587ac.js.map